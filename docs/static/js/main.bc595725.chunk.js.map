{"version":3,"sources":["img/bg.png","img/hakim.jpg","style/GlobalStyle.js","style/SiteBody.js","componenets/Aside.js","About.js","Home.js","App.js","serviceWorker.js","index.js","data/infoCard.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","bg","props","colors","text","SiteBody","styled","div","SideInfo","aside","box","Name","Title","span","smallBox","Linkedin","a","InfoWrap","ul","InfoItem","InfoName","Cv","Aside","className","src","hakim","alt","infoCard","name","first","last","title","href","linkedin","info","map","index","key","link","icon","About","Home","App","useState","light","theme","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc595725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.ccfc34f7.png\";","module.exports = __webpack_public_path__ + \"static/media/hakim.dff1d2eb.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport bg from '../img/bg.png';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: url('${bg}') top left no-repeat;\n    background-color: ${props => (props.colors.bg)};\n   a{\n    color: ${props => (props.colors.text)};\n  }\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst SiteBody = styled.div`\n  margin: 100px 24px;\n  display: flex;\n  @media screen and (min-width: 40em) {\n    max-width: 1000px;\n    margin: 100px auto;\n  }\n`;\n\n\nexport default SiteBody;","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport infoCard from \"../data/infoCard\";\nimport hakim from \"../img/hakim.jpg\";\n\nconst SideInfo = styled.aside`\n  border-radius: 14px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: ${props => props.colors.box};\n  min-height: 200px;\n  text-align: center;\n  width: 100%;\n  @media screen and (min-width: 40em) {\n    width: 210px;\n  }\n\n  @media screen and (min-width: 64em) {\n    width: 210px;\n  }\n  .profile-photo {\n    width: 130px;\n    margin-top: -70px;\n    border-radius: 18px;\n  }\n`;\n\nconst Name = styled.div`\n  font-size: 24px;\n  margin-top: 16px;\n  color: ${props => props.colors.text};\n`;\n\nconst Title = styled.span`\n  border-radius: 10px;\n  background-color: ${props => props.colors.smallBox};\n  color: ${props => props.colors.text};\n  display: inline-block;\n  padding: 5px 10px;\n  margin-top: 10px;\n`;\nconst Linkedin = styled.a`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  border: 1px solid ${props => props.colors.text};\n  display: flex;\n  margin: 24px auto;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  transition: all 0.2s ease-in-out;\n  font-size: 13px;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nconst InfoWrap = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: inline-block;\n  margin: 0 auto 16px auto;\n  min-width:200px;\n  @media screen and (min-width: 40em) {\n    display: block;\n  }\n`;\nconst InfoItem = styled.a`\n  display: flex;\n  padding: 8px 16px;\n  color:${props => props.colors.text}\n  text-decoration:none;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n\n`;\n\nconst InfoName = styled.span`\n  font-size:12px;\n  padding-left:16px;\n`;\nconst Cv = styled.a`\n  border-radius: 20px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #f29639;\n  font-size:16px;\n  color:${props => props.colors.text}\n  margin-bottom: 16px;\n  display: inline-block;\n  padding: 10px 16px;\n`;\n\nconst Aside = props => (\n  <>\n    <SideInfo colors={props.colors}>\n      <img className=\"profile-photo\" src={hakim} alt=\"Ahmed Hakim\" />\n      <Name colors={props.colors}>\n        {infoCard.name.first} <b>{infoCard.name.last}</b>\n      </Name>\n      <Title colors={props.colors}>{infoCard.title}</Title>\n      <Linkedin href={infoCard.linkedin} colors={props.colors}>\n        <span className=\"icon-linkedin2\"></span>\n      </Linkedin>\n      <InfoWrap>\n        {infoCard.info.map((info, index) => {\n          return (\n            <li key={index}>\n              <InfoItem  colors={props.colors} href={info.link ? info.link : null}>\n                <span className={info.icon}></span>\n                <InfoName> {info.name}</InfoName>\n              </InfoItem>\n            </li>\n          );\n        })}\n      </InfoWrap>\n      <Cv href=\"#\" colors={props.colors}><span className=\"icon-cloud_download\"></span> Download Resume</Cv>\n    </SideInfo>\n  </>\n);\n\nexport default Aside;\n","import React from 'react';\n\nfunction About() {\n  return (\n      <h2>This is the about page</h2>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\n\nfunction Home() {\n  return (\n      <h1>This is the Home page of hakim</h1>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Route} from \"react-router-dom\";\n// import styled from 'styled-components';\n// import { createGlobalStyle } from 'styled-components';\nimport GlobalStyle from \"./style/GlobalStyle\"\nimport './style/icons.css'\n\nimport SiteBody from './style/SiteBody';\nimport Aside from './componenets/Aside'\nimport Header from './componenets/Header'\nimport About from './About';\nimport Home from './Home';\n\n\nconst App = props =>{\n  const [light, setLight] = useState(false);\n  let colors={\n    bg: light? \"#F5F6F7\" : \"#272333\",\n    box: light? \"#f5f8f9\" : \"#2F2C40\",\n    smallBox:light? \"#F1F1F1\" : \"#2C283A\",\n    text:light? \"#44566c\" : \"#fff\",\n    theme: \"#F29639\"\n  }\n  return (\n    <>\n      <GlobalStyle colors={colors} />\n      <SiteBody>\n       <Aside colors={colors}/>\n        \n      </SiteBody>\n      {/* <Header/> */}\n      <Route path='/about' exact component={About}/>\n      <Route path='/' exact component={Home}/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  name:{\n    first: \"Ahmed\",\n    last: \"Hakim\"\n  },\n  title:\"Front-End Developer\",\n  linkedin:\"https://www.linkedin.com/in/a-hakem/\",\n  info:[\n    {\n      name:\"January 5\",\n      icon:\"icon-date\"\n    },\n    {\n      name:\"Alexandria, Egypt\",\n      icon:\"icon-location\",\n      link:\"\"\n    },\n    {\n      name:\"ahmed@uipia.com\",\n      icon:\"icon-send\",\n      link:\"mailto:ahmed@uipia.com\"\n    },\n    {\n      name:\"+201110299333\",\n      icon:\"icon-phone\",\n      link:\"+201110299333\"\n    },\n    {\n      name:\"a7med.hakim\",\n      icon:\"icon-skype\",\n      link:\"a7med.hakim\"\n    },\n    \n  ]\n}"],"sourceRoot":""}